<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.3</version>
    </parent>

    <groupId>com.pragmaticnerdz.otp</groupId>
    <artifactId>otp-heroku</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <kotlin.code.style>official</kotlin.code.style>
        <jdk.version>17</jdk.version>

        <jacoco.threshold.line>0.96</jacoco.threshold.line>
        <jacoco.threshold.class>0.96</jacoco.threshold.class>
        <jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>

        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-exec-plugin.version>3.1.0</maven-exec-plugin.version>
        <maven-maven-plugin.version>3.1.0</maven-maven-plugin.version>
        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.1.2</maven-failsafe-plugin.version>

        <amqp-client.version>5.18.0</amqp-client.version>
        <commons-cli.version>1.5.0</commons-cli.version>
        <commons-codec.version>1.16.0</commons-codec.version>
        <commons-csv.version>1.9.0</commons-csv.version>
        <commons-io.version>2.13.0</commons-io.version>
        <common-lang.version>2.6</common-lang.version>
        <commons-text.version>1.10.0</commons-text.version>
        <greenmail.version>2.0.0</greenmail.version>
        <jackson.version>2.15.2</jackson.version>
        <javax-activation.version>1.1.1</javax-activation.version>
        <javax-validation.version>2.0.1.Final</javax-validation.version>
        <javax.servlet.version>4.0.1</javax.servlet.version>
        <glassfish-jaxb-impl.version>4.0.3</glassfish-jaxb-impl.version>
        <jakarta.activation-api.version>2.1.2</jakarta.activation-api.version>
        <jakarta.mail-api.version>2.1.2</jakarta.mail-api.version>
        <jakarta.mail-impl.version>2.0.2</jakarta.mail-impl.version>
        <junit.version>5.10.0</junit.version>
        <junit-platform-commons.version>1.10.0</junit-platform-commons.version>
        <kotlin.version>1.8.22</kotlin.version>
        <kotlin-jackson.version>2.15.2</kotlin-jackson.version>
        <kotlin-mockito.version>2.2.0</kotlin-mockito.version>
        <klint.version>0.50.0</klint.version>
        <lettuce.version>6.2.6.RELEASE</lettuce.version>
        <mailgun.version>1.0.8</mailgun.version>
        <spring.version>6.0.11</spring.version>
        <spring-boot.version>3.1.3</spring-boot.version>
        <spring-redis.version>3.1.3</spring-redis.version>
        <spring-rabbit.version>3.0.8</spring-rabbit.version>
        <springdoc-openapi-mvc.version>2.0.0</springdoc-openapi-mvc.version>
    </properties>

    <dependencies>
        <!-- Kotlin -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${kotlin-jackson.version}</version>
        </dependency>

        <!-- Resources Libraries -->
        <dependency>
            <groupId>io.lettuce</groupId>
            <artifactId>lettuce-core</artifactId>
            <version>${lettuce.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mailgun</groupId>
            <artifactId>mailgun-java</artifactId>
            <version>${mailgun.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit</artifactId>
            <version>${spring-rabbit.version}</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${spring-redis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi-mvc.version}</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.nhaarman.mockitokotlin2</groupId>
            <artifactId>mockito-kotlin</artifactId>
            <version>${kotlin-mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>

        <plugins>
            <!-- Compile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>

                <configuration>
                    <jvmTarget>${jdk.version}</jvmTarget>
                    <compilerPlugins>
                        <plugin>jpa</plugin>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven-maven-plugin.version}</version>
                <configuration>
                    <mainClass>MainKt</mainClass>
                </configuration>
            </plugin>

            <!-- Springboot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- ========================================================= -->
            <!-- plugin: jacoco                                            -->
            <!--  - Generate the code coverage                             -->
            <!--  - Make sure that the coverage threshold is met           -->
            <!-- ========================================================= -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/config/*</exclude>
                        <exclude>**/Application*</exclude>
                    </excludes>
                    <rules>
                        <rule implementation="org.jacoco.maven.RuleConfiguration">
                            <element>BUNDLE</element>
                            <limits>
                                <limit>
                                    <counter>LINE</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>${jacoco.threshold.line}</minimum>
                                </limit>
                                <limit>
                                    <counter>CLASS</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>${jacoco.threshold.class}</minimum>
                                </limit>
                            </limits>
                        </rule>
                    </rules>
                    <excludes>
                        <exclude>**/Application*</exclude>
                        <exclude>**/*Configuration*</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- ========================================================= -->
            <!-- plugin: klint                                             -->
            <!--  - perform code linting                                   -->
            <!-- ========================================================= -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>ktlint</id>
                        <phase>validate</phase>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
                                      classname="com.pinterest.ktlint.Main" classpathref="maven.plugin.classpath">
                                    <arg value="src/**/*.kt"/>
                                    <!-- to generate report in checkstyle format prepend following args: -->
                                    <arg value="--reporter=plain"/>
                                    <arg value="--reporter=checkstyle,output=${project.build.directory}/ktlint.xml"/>

                                    <!-- see https://github.com/pinterest/ktlint#usage for more -->
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>ktlint-format</id>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
                                      classname="com.pinterest.ktlint.Main" classpathref="maven.plugin.classpath">
                                    <arg value="-F"/>
                                    <arg value="src/**/*.kt"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.pinterest</groupId>
                        <artifactId>ktlint</artifactId>
                        <version>${klint.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
